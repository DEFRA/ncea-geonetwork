parameters:
  - name: releaseName
    type: string
  - name: armServiceConnection
    type: string

steps:

- task: DownloadPipelineArtifact@2
  displayName: 'Download Helm Charts'
  condition: succeeded()
  inputs:
    buildType: 'current'
    artifact: charts

- task: ExtractFiles@1
  inputs:
    archiveFilePatterns: '$(Pipeline.Workspace)/charts/*.tgz'
    cleanDestinationFolder: true
    overwriteExistingFiles: true
    destinationFolder: '$(Pipeline.Workspace)/chart'
    
- task: KubeloginInstaller@0
  inputs:
    kubeloginVersion: 'latest'

- task: HelmDeploy@0
  displayName: Helm lint
  inputs:
    connectionType: Azure Resource Manager
    azureSubscriptionEndpoint: ${{ parameters.armServiceConnection }}
    azureResourceGroup: $(aksResourceGroupName)
    kubernetesCluster : $(aksClusterName)
    command: lint
    arguments: '$(Pipeline.Workspace)/chart/ncea-geonetwork'

- task: HelmDeploy@0
  displayName: 'Helm Deploy'
  condition: succeeded()
  inputs:
    connectionType: Azure Resource Manager
    azureSubscriptionEndpoint: ${{ parameters.armServiceConnection }}
    azureResourceGroup: $(aksResourceGroupName)
    kubernetesCluster : $(aksClusterName)
    releaseName: ${{ parameters.releaseName }}
    namespace: $(aksNamespaceGeoNetwork)
    command: 'upgrade'
    chartType: 'FilePath'
    chartPath: '$(Pipeline.Workspace)/chart/ncea-geonetwork'
    valueFile: $(Pipeline.Workspace)/chart/ncea-geonetwork/values.yaml
    overrideValues: |
        geoimage.repository=$(containerRepositoryFullPath)
        geoimage.tag=$(imageTag)
        ingress.host=$(ingressHostname)
        postgres.host=$(postgresHostname)
        postgres.dbuser=$(postgresDbUser)
        postgres.password=$(postgresDbPassword)
        postgres.dbname=$(postgresDbName)
        esimage.repository=$(elasticContainerRepositoryFullPath)
        pv.geoCataloguePvDiskResourceId=$(geoCataloguePvDiskResourceId)
        peSaFileshare.storageAccountResourceGroup=$(storageAccountResourceGroup)
        peSaFileshare.storageAccountName=$(storageAccountName)
        peSaFileshare.storageAccountFilePrivateEndpointFqdn=$(storageAccountFilePrivateEndpointFqdn)
        identity.serviceAccountName=$(serviceAccountGeonetwork)
        identity.clientId=$(managedIdentityClientIdGeonetwork)
        identity.tenantId=$(tenantId)
        identity.keyvaultName=$(keyvaultName)
        ingress.elasticHostName=$(elasticSearchIngressHostname)
    install: true
    # force: true
    arguments: --timeout=30m --debug

- task: HelmDeploy@0
  displayName: 'Helm Rollback'
  condition: failed()
  inputs:
    connectionType: Azure Resource Manager
    azureSubscriptionEndpoint: ${{ parameters.armServiceConnection }}
    azureResourceGroup: $(aksResourceGroupName)
    kubernetesCluster : $(aksClusterName)
    releaseName: ${{ parameters.releaseName }}
    namespace: $(aksNamespaceGeoNetwork)
    command: 'rollback'
    arguments: --timeout=30m --debug
