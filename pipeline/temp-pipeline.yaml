trigger: none

variables: 
  - template: templates/variables-global.yml
  - name : acrContainerRegistryServiceConnection
    value: acr-AZR-NCE-DEV-TEMP
  - name: azureServiceConnection
    value: AZR-NCE-DEV1
  - group: azureVariables-dev
  - group: geoNetworkAppVariables-dev

pool:
  name: DEFRA-COMMON-ubuntu2204-SSV3

steps:

- task: KubeloginInstaller@0
  inputs:
    kubeloginVersion: 'latest'

- script: |
    ls 
  displayName: 'ls'

- task: HelmDeploy@0
  displayName: 'Helm Deploy'
  condition: succeeded()
  inputs:
    connectionType: Azure Resource Manager
    azureSubscriptionEndpoint: $(azureServiceConnection)
    azureResourceGroup: $(aksResourceGroupName)
    kubernetesCluster : $(aksClusterName)
    releaseName: "testrelease"
    namespace: $(aksNamespaceGeoNetwork)
    command: 'install'
    chartType: 'FilePath'
    chartPath: '$(Build.SourcesDirectory)/charts/geonetwork'
    chartVersion: "$(Build.BuildNumber)"
    valueFile: $(Build.SourcesDirectory)/charts/geonetwork/values.yaml
    overrideValues: |
        geoimage.repository=$(containerRepositoryFullPath)
        geoimage.tag="20240314.33_feature-326173-geonetwork-build-pipeline"
        ingress.host=$(ingressHostname)
        postgres.host=$(postgresHostname)
        postgres.dbuser=$(postgresDbUser)
        postgres.password=$(postgresDbPassword)
        postgres.dbname=$(postgresDbName)
        esimage.repository=$(elasticContainerRepositoryFullPath)
        pv.geoCataloguePvDiskResourceId=$(geoCataloguePvDiskResourceId)
        peSaFileshare.storageAccountResourceGroup=$(storageAccountResourceGroup)
        peSaFileshare.storageAccountName=$(storageAccountName)
        peSaFileshare.storageAccountFilePrivateEndpointFqdn=$(storageAccountFilePrivateEndpointFqdn)
        identity.serviceAccountName=$(serviceAccountGeonetwork)
        identity.clientId=$(managedIdentityClientIdGeonetwork)
        identity.tenantId=$(tenantId)
        identity.keyvaultName=$(keyvaultName)
    install: true
    force: true
    arguments: --timeout=30m --debug
